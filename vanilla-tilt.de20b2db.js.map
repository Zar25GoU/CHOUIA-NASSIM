{"version":3,"sources":["js/vanilla-tilt.js"],"names":["VanillaTilt","element","settings","Node","width","height","clientWidth","clientHeight","left","top","gammazero","betazero","lastgammazero","lastbetazero","transitionTimeout","updateCall","event","updateBind","update","bind","resetBind","reset","extendSettings","reverse","glare","isSettingTrue","glarePrerender","fullPageListening","gyroscope","gyroscopeSamples","elementListener","getElementListener","prepareGlare","updateClientSize","addEventListeners","updateInitialPosition","window","document","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","removeEventListener","clearTimeout","cancelAnimationFrame","removeEventListeners","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","posX","posY","clientX","clientY","requestAnimationFrame","style","willChange","setTransition","transform","perspective","resetGlare","glareElement","opacity","startX","startY","max","backupScale","scale","x","y","Math","min","tiltX","toFixed","tiltY","percentageX","percentageY","angle","atan2","PI","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","getValues","axis","dispatchEvent","CustomEvent","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","Object","assign","updateGlareSize","glareSize","innerWidth","documentElement","body","innerHeight","transition","speed","easing","setTimeout","defaultSettings","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","e","setting","elements","NodeList","slice","call","Array","forEach","init","querySelectorAll"],"mappings":"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","file":"vanilla-tilt.de20b2db.js","sourceRoot":"..\\src","sourcesContent":["var VanillaTilt = (function () {\n'use strict';\n\n/**\n * Created by Sergiu Șandor (micku7zu) on 1/27/2017.\n * Original idea: https://github.com/gijsroge/tilt.js\n * MIT License.\n * Version 1.7.3\n */\n\nclass VanillaTilt {\n  constructor(element, settings = {}) {\n    if (!(element instanceof Node)) {\n      throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\n    }\n\n    this.width = null;\n    this.height = null;\n    this.clientWidth = null;\n    this.clientHeight = null;\n    this.left = null;\n    this.top = null;\n\n    // for Gyroscope sampling\n    this.gammazero = null;\n    this.betazero = null;\n    this.lastgammazero = null;\n    this.lastbetazero = null;\n\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.event = null;\n\n    this.updateBind = this.update.bind(this);\n    this.resetBind = this.reset.bind(this);\n\n    this.element = element;\n    this.settings = this.extendSettings(settings);\n\n    this.reverse = this.settings.reverse ? -1 : 1;\n    this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n    this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n    this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n    this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n    this.gyroscopeSamples = this.settings.gyroscopeSamples;\n\n    this.elementListener = this.getElementListener();\n\n    if (this.glare) {\n      this.prepareGlare();\n    }\n\n    if (this.fullPageListening) {\n      this.updateClientSize();\n    }\n\n    this.addEventListeners();\n    this.reset();\n    this.updateInitialPosition();\n  }\n\n  static isSettingTrue(setting) {\n    return setting === \"\" || setting === true || setting === 1;\n  }\n\n  /**\n   * Method returns element what will be listen mouse events\n   * @return {Node}\n   */\n  getElementListener() {\n    if (this.fullPageListening) {\n      return window.document;\n    }\n\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n      const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n\n      if (mouseEventElement) {\n        return mouseEventElement;\n      }\n    }\n\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\n      return this.settings[\"mouse-event-element\"];\n    }\n\n    return this.element;\n  }\n\n  /**\n   * Method set listen methods for this.elementListener\n   * @return {Node}\n   */\n  addEventListeners() {\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n    this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n\n    if (this.glare || this.fullPageListening) {\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\n    }\n\n    if (this.gyroscope) {\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n    }\n  }\n\n  /**\n   * Method remove event listeners from current this.elementListener\n   */\n  removeEventListeners() {\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n    this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n\n    if (this.gyroscope) {\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n    }\n\n    if (this.glare || this.fullPageListening) {\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.transitionTimeout);\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.reset();\n\n    this.removeEventListeners();\n    this.element.vanillaTilt = null;\n    delete this.element.vanillaTilt;\n\n    this.element = null;\n  }\n\n  onDeviceOrientation(event) {\n    if (event.gamma === null || event.beta === null) {\n      return;\n    }\n\n    this.updateElementPosition();\n\n    if (this.gyroscopeSamples > 0) {\n      this.lastgammazero = this.gammazero;\n      this.lastbetazero = this.betazero;\n\n      if (this.gammazero === null) {\n        this.gammazero = event.gamma;\n        this.betazero = event.beta;\n      } else {\n        this.gammazero = (event.gamma + this.lastgammazero) / 2;\n        this.betazero = (event.beta + this.lastbetazero) / 2;\n      }\n\n      this.gyroscopeSamples -= 1;\n    }\n\n    const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n    const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n\n    const degreesPerPixelX = totalAngleX / this.width;\n    const degreesPerPixelY = totalAngleY / this.height;\n\n    const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n    const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n\n    const posX = angleX / degreesPerPixelX;\n    const posY = angleY / degreesPerPixelY;\n\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = {\n      clientX: posX + this.left,\n      clientY: posY + this.top,\n    };\n\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  }\n\n  onMouseEnter() {\n    this.updateElementPosition();\n    this.element.style.willChange = \"transform\";\n    this.setTransition();\n  }\n\n  onMouseMove(event) {\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = event;\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  }\n\n  onMouseLeave() {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      requestAnimationFrame(this.resetBind);\n    }\n  }\n\n  reset() {\n    this.event = {\n      clientX: this.left + this.width / 2,\n      clientY: this.top + this.height / 2\n    };\n\n    if (this.element && this.element.style) {\n      this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\n        `rotateX(0deg) ` +\n        `rotateY(0deg) ` +\n        `scale3d(1, 1, 1)`;\n    }\n\n    this.resetGlare();\n  }\n\n  resetGlare() {\n    if (this.glare) {\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n      this.glareElement.style.opacity = \"0\";\n    }\n  }\n\n  updateInitialPosition() {\n    if (this.settings.startX === 0 && this.settings.startY === 0) {\n      return;\n    }\n\n    this.onMouseEnter();\n\n    if (this.fullPageListening) {\n      this.event = {\n        clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n        clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n      };\n    } else {\n      this.event = {\n        clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\n        clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\n      };\n    }\n\n\n    let backupScale = this.settings.scale;\n    this.settings.scale = 1;\n    this.update();\n    this.settings.scale = backupScale;\n    this.resetGlare();\n  }\n\n  getValues() {\n    let x, y;\n\n    if (this.fullPageListening) {\n      x = this.event.clientX / this.clientWidth;\n      y = this.event.clientY / this.clientHeight;\n    } else {\n      x = (this.event.clientX - this.left) / this.width;\n      y = (this.event.clientY - this.top) / this.height;\n    }\n\n    x = Math.min(Math.max(x, 0), 1);\n    y = Math.min(Math.max(y, 0), 1);\n\n    let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n    let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n    let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n\n    return {\n      tiltX: tiltX,\n      tiltY: tiltY,\n      percentageX: x * 100,\n      percentageY: y * 100,\n      angle: angle\n    };\n  }\n\n  updateElementPosition() {\n    let rect = this.element.getBoundingClientRect();\n\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  update() {\n    let values = this.getValues();\n\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\n      \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\n      \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\n      \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n\n    if (this.glare) {\n      this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n      this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n    }\n\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n      \"detail\": values\n    }));\n\n    this.updateCall = null;\n  }\n\n  /**\n   * Appends the glare element (if glarePrerender equals false)\n   * and sets the default style\n   */\n  prepareGlare() {\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n    if (!this.glarePrerender) {\n      // Create glare element\n      const jsTiltGlare = document.createElement(\"div\");\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\n\n      const jsTiltGlareInner = document.createElement(\"div\");\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n\n      jsTiltGlare.appendChild(jsTiltGlareInner);\n      this.element.appendChild(jsTiltGlare);\n    }\n\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n\n    if (this.glarePrerender) {\n      return;\n    }\n\n    Object.assign(this.glareElementWrapper.style, {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"overflow\": \"hidden\",\n      \"pointer-events\": \"none\",\n      \"border-radius\": \"inherit\",\n    });\n\n    Object.assign(this.glareElement.style, {\n      \"position\": \"absolute\",\n      \"top\": \"50%\",\n      \"left\": \"50%\",\n      \"pointer-events\": \"none\",\n      \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n      \"transform-origin\": \"0% 0%\",\n      \"opacity\": \"0\",\n    });\n\n    this.updateGlareSize();\n  }\n\n  updateGlareSize() {\n    if (this.glare) {\n      const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n\n      Object.assign(this.glareElement.style, {\n        \"width\": `${glareSize}px`,\n        \"height\": `${glareSize}px`,\n      });\n    }\n  }\n\n  updateClientSize() {\n    this.clientWidth = window.innerWidth\n      || document.documentElement.clientWidth\n      || document.body.clientWidth;\n\n    this.clientHeight = window.innerHeight\n      || document.documentElement.clientHeight\n      || document.body.clientHeight;\n  }\n\n  onWindowResize() {\n    this.updateGlareSize();\n    this.updateClientSize();\n  }\n\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n    if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n\n    this.transitionTimeout = setTimeout(() => {\n      this.element.style.transition = \"\";\n      if (this.glare) {\n        this.glareElement.style.transition = \"\";\n      }\n    }, this.settings.speed);\n\n  }\n\n  /**\n   * Method return patched settings of instance\n   * @param {boolean} settings.reverse - reverse the tilt direction\n   * @param {number} settings.max - max tilt rotation (degrees)\n   * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\n   * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\n   * @param {string} settings.easing - Easing on enter/exit\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\n   * @param {number} settings.speed - Speed of the enter/exit transition\n   * @param {boolean} settings.transition - Set a transition on enter/exit\n   * @param {string|null} settings.axis - What axis should be enabled. Can be \"x\" or \"y\"\n   * @param {boolean} settings.glare - if it should have a \"glare\" effect\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\n   * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\n   * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\n   */\n  extendSettings(settings) {\n    let defaultSettings = {\n      reverse: false,\n      max: 15,\n      startX: 0,\n      startY: 0,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: 1,\n      speed: 300,\n      transition: true,\n      axis: null,\n      glare: false,\n      \"max-glare\": 1,\n      \"glare-prerender\": false,\n      \"full-page-listening\": false,\n      \"mouse-event-element\": null,\n      reset: true,\n      gyroscope: true,\n      gyroscopeMinAngleX: -45,\n      gyroscopeMaxAngleX: 45,\n      gyroscopeMinAngleY: -45,\n      gyroscopeMaxAngleY: 45,\n      gyroscopeSamples: 10\n    };\n\n    let newSettings = {};\n    for (var property in defaultSettings) {\n      if (property in settings) {\n        newSettings[property] = settings[property];\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n        let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n        try {\n          newSettings[property] = JSON.parse(attribute);\n        } catch (e) {\n          newSettings[property] = attribute;\n        }\n\n      } else {\n        newSettings[property] = defaultSettings[property];\n      }\n    }\n\n    return newSettings;\n  }\n\n  static init(elements, settings) {\n    if (elements instanceof Node) {\n      elements = [elements];\n    }\n\n    if (elements instanceof NodeList) {\n      elements = [].slice.call(elements);\n    }\n\n    if (!(elements instanceof Array)) {\n      return;\n    }\n\n    elements.forEach((element) => {\n      if (!(\"vanillaTilt\" in element)) {\n        element.vanillaTilt = new VanillaTilt(element, settings);\n      }\n    });\n  }\n}\n\nif (typeof document !== \"undefined\") {\n  /* expose the class to window */\n  window.VanillaTilt = VanillaTilt;\n\n  /**\n   * Auto load\n   */\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n}\n\nreturn VanillaTilt;\n\n}());\n"]}